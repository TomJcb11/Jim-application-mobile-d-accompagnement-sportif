<<<<<<< HEAD
export type { ParsedDataURI } from './common';
=======
/// <reference types="node" />
export interface MimeBuffer extends Buffer {
    type: string;
    typeFull: string;
    charset: string;
}
>>>>>>> origin/main
/**
 * Returns a `Buffer` instance from the given data URI `uri`.
 *
 * @param {String} uri Data URI to turn into a Buffer instance
<<<<<<< HEAD
 */
export declare const dataUriToBuffer: (uri: string | URL) => import("./common").ParsedDataURI;
//# sourceMappingURL=index.d.ts.map
=======
 * @returns {Buffer} Buffer instance from Data URI
 * @api public
 */
export declare function dataUriToBuffer(uri: string): MimeBuffer;
export default dataUriToBuffer;
>>>>>>> origin/main
